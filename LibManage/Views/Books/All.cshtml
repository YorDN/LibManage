@using LibManage.Data.Models.Library
@using LibManage.ViewModels.Books

@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity

@model PaginatedBooksViewModel


@{
    ViewData["Title"] = "All books";
    Func<int, IHtmlContent> RenderStars = rating =>
    {
        var stars = new HtmlContentBuilder();
        for (int i = 1; i <= 5; i++)
        {
            if (i <= rating)
                stars.AppendHtml("<i class='bi bi-star-fill text-warning'></i>");
            else
                stars.AppendHtml("<i class='bi bi-star text-warning'></i>");
        }
        return stars;
    };
}

<form asp-action="All" method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <input type="text" name="SearchTerm" class="form-control" placeholder="Search by title or author" />
    </div>
    <div class="col-md-2">
        <select name="MinimumRating" class="form-select">
            <option value="">Min Rating</option>
            @for (int i = 1; i <= 5; i++)
            {
                <option value="@i">@i+ stars</option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <select name="BookType" class="form-select">
            <option value="">All Types</option>
            <option>Digital</option>
            <option>Audio</option>
            <option>Physical</option>
        </select>
    </div>
    <div class="col-md-2">
        <select name="IsTaken" class="form-select">
            <option value="">All</option>
            <option value="false">Available</option>
            <option value="true">Taken</option>
        </select>
    </div>
    <div class="col-md-2">
        <select name="SortBy" class="form-select">
            <option value="Title">Sort by Title</option>
            <option value="Rating">Sort by Rating</option>
        </select>
    </div>
    <div class="col-md-1">
        <input type="hidden" name="SortDescending" value="false" />
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div>
</form>

@if (!Model.Books.Any())
{
    <div class="alert alert-info text-center">
        📚 No books available in the library.
        <br />
        @if (User.Identity?.IsAuthenticated == true && (User.IsInRole("Admin") || User.IsInRole("Manager")))
        {
            <a class="nav-link fw-bold" asp-area="" asp-controller="Books" asp-action="Add">Add a book</a>
        }
    </div>
}

<div class="container py-4">
    <div class="row row-cols-2 row-cols-sm-3 row-cols-md-5 g-4 ">
        @foreach (var book in Model.Books)
        {
            <div class="col">
                <div style="display: flex; justify-content: center; text-align: center">
                    <a href="@Url.Action("Details", "Books", new { id = book.Id })" class="bookLink">
                        <div class="rounded p-3 bg-white bookBox" style="width: 250px;">
                            <div style="display: flex; justify-content: center;">
                                <img src="@book.Cover"
                                     alt="@book.Title"
                                     class="img-fluid mb-2"
                                     style="object-fit: cover; height: 200px;" />
                            </div>
                            <div class="my-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= book.Rating)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-warning"></i>
                                    }
                                }
                            </div>
                            <small class="text-muted d-block">Author: @book.AuthorName</small>

                            <strong class="d-block" title="@book.Title"
                                    style="
                                    display: -webkit-box;
                                    -webkit-line-clamp: 2;
                                    -webkit-box-orient: vertical;
                                    overflow: hidden;
                                    text-overflow: ellipsis;
                                    height: 2.8em;
                                    line-height: 1.4em;
                                    ">
                                @book.Title
                            </strong>



                            <em class="text-muted small">(@book.BookType)</em>

                            

                            @if (book.IsTaken)
                            {
                                <div class="text-danger fw-bold small">Taken</div>
                            }
                            else
                            {
                                <div class="text-success fw-bold small">Available</div>
                            }
                        </div>
                    </a>

                </div>
            </div>
        }
    </div>
</div>
<nav>
    <ul class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link"
                   asp-action="All"
                   asp-route-page="@i"
                   asp-route-SearchTerm="@Model.FilterOptions.SearchTerm"
                   asp-route-MinimumRating="@Model.FilterOptions.MinimumRating"
                   asp-route-BookType="@Model.FilterOptions.BookType"
                   asp-route-IsTaken="@Model.FilterOptions.IsTaken"
                   asp-route-SortBy="@Model.FilterOptions.SortBy"
                   asp-route-SortDescending="@Model.FilterOptions.SortDescending">
                    @i
                </a>
            </li>
        }
    </ul>
</nav>
